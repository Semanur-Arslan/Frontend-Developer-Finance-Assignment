{"ast":null,"code":"var _jsxFileName = \"/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/add_debt.tsx\",\n  _s = $RefreshSig$();\nimport axiosInstance from \"../utils/axios\";\nimport { useEffect, useState } from \"react\";\nimport Header from '../components/header';\nimport { useNavigate } from \"react-router-dom\";\nimport PaymentForm from \"../components/form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddDebts() {\n  _s();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [formData, setFormData] = useState({\n    debtName: '',\n    lenderName: '',\n    debtAmount: 0,\n    interestRate: 0,\n    amount: 0,\n    paymentStart: new Date().toISOString().split('T')[0],\n    installment: 0,\n    description: '',\n    paymentPlan: [{\n      paymentDate: new Date().toISOString().split('T')[0],\n      paymentAmount: 0\n    }]\n  });\n  const calculateTotalAmount = (debtAmount, interestRate) => {\n    const total = debtAmount + debtAmount * (interestRate / 100);\n    return total;\n  };\n  const generatePaymentPlan = (amount, installment, paymentStart) => {\n    const totalAmount = amount;\n    const paymentAmount = totalAmount / installment;\n    const paymentPlans = [];\n    const currentDate = new Date(paymentStart);\n    for (let i = 0; i < installment; i++) {\n      const paymentDate = currentDate.toISOString().split('T')[0];\n      paymentPlans.push({\n        paymentDate,\n        paymentAmount\n      });\n      currentDate.setMonth(currentDate.getMonth() + 1);\n    }\n    return paymentPlans;\n  };\n  useEffect(() => {\n    const paymentPlan = generatePaymentPlan(formData.debtAmount, formData.installment, formData.paymentStart);\n    setFormData(prevState => ({\n      ...prevState,\n      paymentPlan: paymentPlan\n    }));\n  }, [formData.debtAmount, formData.installment, formData.paymentStart]);\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => {\n      const updatedData = {\n        ...prevState,\n        [name]: name === 'paymentStart' ? value : value\n      };\n      if (name === 'debtAmount' || name === 'interestRate' || name === 'installment') {\n        const numericValue = parseFloat(value);\n        if (!isNaN(numericValue)) {\n          updatedData[name] = numericValue;\n          if (name === 'debtAmount' || name === 'interestRate') {\n            updatedData.amount = calculateTotalAmount(updatedData.debtAmount, updatedData.interestRate);\n          }\n          if (name === 'debtAmount' || name === 'installment') {\n            updatedData.paymentPlan = generatePaymentPlan(formData.amount, formData.installment, formData.paymentStart);\n          }\n        }\n      }\n      return updatedData;\n    });\n  };\n  const handleFocus = e => parseInt(e.target.value) === 0 && setFormData(prevState => ({\n    ...prevState,\n    [e.target.name]: ''\n  }));\n  const handleBlur = e => !e.target.value && setFormData(prevState => ({\n    ...prevState,\n    [e.target.name]: 0\n  }));\n  const handleSubmit = async e => {\n    var _formData$interestRat, _formData$installment;\n    e.preventDefault();\n    const dataToSend = {\n      ...formData,\n      debtAmount: formData.debtAmount,\n      interestRate: (_formData$interestRat = formData.interestRate) !== null && _formData$interestRat !== void 0 ? _formData$interestRat : 0,\n      amount: formData.amount,\n      installment: (_formData$installment = formData.installment) !== null && _formData$installment !== void 0 ? _formData$installment : 0\n    };\n    console.log(dataToSend);\n    try {\n      const response = await axiosInstance.post('/finance/debt', dataToSend);\n      if (response.data.status === 'success') {\n        const id = response.data.data.id;\n        navigate(`/payment-plan/${id}`);\n      } else if (response.data.status === 'error') {\n        setError(response.data.data);\n      }\n    } catch (error) {\n      setError('Formu gönderirken bir hata oluştu.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-light pages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add Debt\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerForm\",\n      children: /*#__PURE__*/_jsxDEV(PaymentForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n_s(AddDebts, \"0CkqZolIpspV7UHz3YFiGUDRDng=\", false, function () {\n  return [useNavigate];\n});\n_c = AddDebts;\nexport default AddDebts;\nvar _c;\n$RefreshReg$(_c, \"AddDebts\");","map":{"version":3,"names":["axiosInstance","useEffect","useState","Header","useNavigate","PaymentForm","jsxDEV","_jsxDEV","AddDebts","_s","navigate","error","setError","formData","setFormData","debtName","lenderName","debtAmount","interestRate","amount","paymentStart","Date","toISOString","split","installment","description","paymentPlan","paymentDate","paymentAmount","calculateTotalAmount","total","generatePaymentPlan","totalAmount","paymentPlans","currentDate","i","push","setMonth","getMonth","prevState","handleChange","e","name","value","target","updatedData","numericValue","parseFloat","isNaN","handleFocus","parseInt","handleBlur","handleSubmit","_formData$interestRat","_formData$installment","preventDefault","dataToSend","console","log","response","post","data","status","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/add_debt.tsx"],"sourcesContent":["import axiosInstance from \"../utils/axios\";\nimport { useEffect, useState } from \"react\";\nimport {\n  MDBTabsContent,\n  MDBBtn,\n  MDBInput,\n  MDBValidation,\n  MDBValidationItem,\n  MDBRow,\n  MDBCol\n} from 'mdb-react-ui-kit';\nimport Header from '../components/header';\nimport { useNavigate } from \"react-router-dom\";\nimport PaymentForm from \"../components/form\";\n\nfunction AddDebts() {\n\n  const navigate = useNavigate();\n\n  type PaymentPlan = {\n    paymentDate: string;\n    paymentAmount: number;\n  };\n\n  type FormData = {\n    debtName: string;\n    lenderName: string;\n    debtAmount: number;\n    interestRate: number;\n    amount: number;\n    paymentStart: string;\n    installment: number;\n    description: string;\n    paymentPlan: PaymentPlan[];\n  };\n\n  const [error, setError] = useState<string>('');\n  const [formData, setFormData] = useState<FormData>({\n    debtName: '',\n    lenderName: '',\n    debtAmount: 0,\n    interestRate: 0,\n    amount: 0,\n    paymentStart: new Date().toISOString().split('T')[0],\n    installment: 0,\n    description: '',\n    paymentPlan: [\n      {\n        paymentDate: new Date().toISOString().split('T')[0],\n        paymentAmount: 0,\n      }\n    ]\n  });\n\n  const calculateTotalAmount = (debtAmount: number, interestRate: number) => {\n    const total = debtAmount + (debtAmount * (interestRate / 100))\n    return total;\n  };\n\n  const generatePaymentPlan = (amount: number, installment: number, paymentStart: string): PaymentPlan[] => {\n    const totalAmount = amount;\n    const paymentAmount = totalAmount / installment;\n    const paymentPlans: PaymentPlan[] = [];\n\n    const currentDate = new Date(paymentStart);\n\n    for (let i = 0; i < installment; i++) {\n      const paymentDate = currentDate.toISOString().split('T')[0];\n      paymentPlans.push({\n        paymentDate,\n        paymentAmount\n      });\n\n      currentDate.setMonth(currentDate.getMonth() + 1);\n    }\n\n    return paymentPlans;\n  };\n\n  useEffect(() => {\n    const paymentPlan = generatePaymentPlan(formData.debtAmount, formData.installment, formData.paymentStart);\n    setFormData(prevState => ({\n      ...prevState,\n      paymentPlan: paymentPlan\n    }));\n  }, [formData.debtAmount, formData.installment, formData.paymentStart]);\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n\n    setFormData(prevState => {\n      const updatedData = {\n        ...prevState,\n        [name]: name === 'paymentStart' ? value : value\n      };\n\n\n      if (name === 'debtAmount' || name === 'interestRate' || name === 'installment') {\n        const numericValue = parseFloat(value);\n        if (!isNaN(numericValue)) {\n          updatedData[name] = numericValue;\n          if (name === 'debtAmount' || name === 'interestRate') {\n            updatedData.amount = calculateTotalAmount(updatedData.debtAmount, updatedData.interestRate);\n          }\n          if (name === 'debtAmount' || name === 'installment') {\n            updatedData.paymentPlan = generatePaymentPlan(formData.amount, formData.installment, formData.paymentStart);\n          }\n        }\n      }\n      return updatedData;\n\n    });\n  };\n\n  const handleFocus = (e: React.FocusEvent<HTMLInputElement>) => parseInt(e.target.value) === 0 && setFormData(prevState => ({ ...prevState, [e.target.name]: '' }));\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => !e.target.value && setFormData(prevState => ({ ...prevState, [e.target.name]: 0 }));\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    const dataToSend = {\n      ...formData,\n      debtAmount: formData.debtAmount,\n      interestRate: formData.interestRate ?? 0,\n      amount: formData.amount,\n      installment: formData.installment ?? 0\n    };\n\n    console.log(dataToSend)\n\n    try {\n      const response = await axiosInstance.post('/finance/debt', dataToSend);\n      if (response.data.status === 'success') {\n        const id = response.data.data.id\n        navigate(`/payment-plan/${id}`);\n      } else if (response.data.status === 'error') {\n        setError(response.data.data)\n      }\n    } catch (error) {\n      setError('Formu gönderirken bir hata oluştu.');\n    }\n  };\n\n\n\n  return (\n    <div className=\"bg-light pages\">\n      <Header />\n      <div>Add Debt</div>\n      {error && <div className='error-message'>{error}</div>}\n      <div className=\"containerForm\"><PaymentForm />\n        {/* <MDBTabsContent>\n          <MDBValidation onSubmit={handleSubmit}>\n            <MDBRow className='mb-2'>\n              <MDBCol>\n                <MDBValidationItem feedback='Please enter debt name' invalid className='form-item'>\n                  <span>Debt Name</span>\n                  <MDBInput wrapperClass='mb-4' required name='debtName' type='text' value={formData.debtName} onChange={handleChange} />\n                </MDBValidationItem>\n              </MDBCol>\n              <MDBCol>\n                <MDBValidationItem feedback='Please enter lender' invalid className='form-item'>\n                  <span>Lender</span>\n                  <MDBInput wrapperClass='mb-4' required name='lenderName' type='text' value={formData.lenderName} onChange={handleChange} />\n                </MDBValidationItem>\n              </MDBCol>\n            </MDBRow>\n\n            <MDBRow className='mb-2'>\n              <MDBCol>\n                <MDBValidationItem feedback='Please enter amount' invalid className='form-item'>\n                  <span>Amount</span>\n                  <MDBInput\n                    wrapperClass='mb-4'\n                    required\n                    name='debtAmount'\n                    type='number'\n                    value={formData.debtAmount}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                  />\n                </MDBValidationItem>\n              </MDBCol>\n              <MDBCol>\n                <MDBValidationItem feedback='Please enter interest rate' invalid className='form-item'>\n                  <span>Interest rate (%)</span>\n                  <MDBInput\n                    wrapperClass='mb-4'\n                    required\n                    name='interestRate'\n                    type='number'\n                    value={formData.interestRate}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                  />\n                </MDBValidationItem>\n              </MDBCol>\n            </MDBRow>\n\n            <MDBRow className='mb-2'>\n              <MDBCol>\n                <MDBValidationItem feedback='' invalid className='form-item'>\n                  <span>Total</span>\n                  <MDBInput\n                    wrapperClass='mb-4'\n                    required\n                    name='amount'\n                    type='number'\n                    value={formData.amount}\n\n                    disabled\n                  />\n                </MDBValidationItem>\n              </MDBCol>\n              <MDBCol>\n                <MDBValidationItem feedback='Please enter starting date' invalid className='form-item'>\n                  <span>Starting Date</span>\n                  <MDBInput\n                    wrapperClass='mb-4'\n                    required\n                    name='paymentStart'\n                    type='date'\n                    value={formData.paymentStart}\n                    onChange={handleChange}\n                  />\n                </MDBValidationItem>\n              </MDBCol>\n            </MDBRow>\n\n            <MDBRow className='mb-2'>\n              <MDBCol>\n                <MDBValidationItem feedback='Please enter number of installments' invalid className='form-item'>\n                  <span>Number of Installments</span>\n                  <MDBInput\n                    wrapperClass='mb-4'\n                    required\n                    name='installment'\n                    type='number'\n                    value={formData.installment}\n                    onChange={handleChange}\n                    onFocus={handleFocus}\n                    onBlur={handleBlur}\n                  />\n                </MDBValidationItem>\n              </MDBCol>\n              <MDBCol>\n                <MDBValidationItem feedback='Please enter description' invalid className='form-item'>\n                  <span>Description</span>\n                  <MDBInput wrapperClass='mb-4' required name='description' type='text' value={formData.description} onChange={handleChange} />\n                </MDBValidationItem>\n              </MDBCol>\n            </MDBRow>\n\n            <MDBBtn type=\"submit\" className=\"mb-4 w-100\">Create Payment Plan</MDBBtn>\n          </MDBValidation>\n        </MDBTabsContent> */}\n      </div>\n    </div>\n  );\n}\n\nexport default AddDebts;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}