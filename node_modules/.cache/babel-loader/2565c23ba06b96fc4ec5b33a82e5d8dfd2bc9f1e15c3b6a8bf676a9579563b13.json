{"ast":null,"code":"var _jsxFileName = \"/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/edit_payment_plan.tsx\",\n  _s = $RefreshSig$();\nimport axiosInstance from \"../utils/axios\";\nimport { useEffect, useState } from \"react\";\nimport { MDBTabsContent } from 'mdb-react-ui-kit';\nimport Header from '../components/header';\nimport { useParams } from 'react-router-dom';\nimport DebtForm from \"../components/debt_form\";\nimport { useDispatch } from \"react-redux\";\nimport { setFormData } from \"../redux/reducers/debt_slice\";\nimport PaymentPlanList from \"../components/payment_plan_list\";\nimport { updatePaymentPlan } from \"../redux/reducers/payment_plan_slice\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimportroo;\nfunction AddPaymentPlanPage() {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    id\n  } = useParams();\n  const paymentPlans = useSelector(state => state.paymentPlan.paymentPlans);\n  const [error, setError] = useState('');\n  const fetchData = async () => {\n    try {\n      const response = await axiosInstance.get(`/finance/debt/${id}`);\n      if (response.data.status === 'success') {\n        dispatch(setFormData(response.data.data));\n        setPaymentPlans(response.data.data.paymentPlan);\n      } else if (response.data.status === 'error') {\n        setError(response.data.data);\n      }\n    } catch (error) {\n      setError('An error occurred while retrieving data.');\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  const handleSubmit = async formData => {\n    try {\n      const response = await axiosInstance.put(`/finance/debt/${id}`, formData);\n      if (response.data.status === 'success') {\n        const id = response.data.data.id;\n        fetchData();\n      } else if (response.data.status === 'error') {\n        setError(response.data.data);\n      }\n    } catch (error) {\n      setError('An error occurred while submitting the form.');\n    }\n  };\n  const handleUpdate = async (planId, updatedData) => {\n    try {\n      const response = await axiosInstance.put(`/finance/payment-plans/${planId}`, updatedData);\n      if (response.data.status === 'success') {\n        dispatch(updatePaymentPlan(response.data));\n        fetchData();\n      } else if (response.data.status === 'error') {\n        setError(response.data.data);\n      }\n    } catch (error) {\n      setError('An error occurred during the update');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-light pages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-2 py-4 pagesTitle\",\n      children: \"Edit Payment Plan \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerForm\",\n      children: [/*#__PURE__*/_jsxDEV(DebtForm, {\n        onSubmit: handleSubmit,\n        error: error,\n        buttonText: \"Update Payment Plan\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MDBTabsContent, {\n        children: /*#__PURE__*/_jsxDEV(MDBTabsContent, {\n          className: \"p-5\",\n          children: paymentPlans.map((plan, index) => /*#__PURE__*/_jsxDEV(PaymentPlanList, {\n            index: index,\n            plan: plan,\n            onUpdate: updatedData => handleUpdate(plan.id, updatedData)\n          }, plan.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(AddPaymentPlanPage, \"1vD1BUG0Qb21g4l7oiuVhkxcz4Q=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n_c = AddPaymentPlanPage;\nexport default AddPaymentPlanPage;\nvar _c;\n$RefreshReg$(_c, \"AddPaymentPlanPage\");","map":{"version":3,"names":["axiosInstance","useEffect","useState","MDBTabsContent","Header","useParams","DebtForm","useDispatch","setFormData","PaymentPlanList","updatePaymentPlan","useSelector","jsxDEV","_jsxDEV","importroo","AddPaymentPlanPage","_s","dispatch","id","paymentPlans","state","paymentPlan","error","setError","fetchData","response","get","data","status","setPaymentPlans","handleSubmit","formData","put","handleUpdate","planId","updatedData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","buttonText","map","plan","index","onUpdate","_c","$RefreshReg$"],"sources":["/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/edit_payment_plan.tsx"],"sourcesContent":["import axiosInstance from \"../utils/axios\";\nimport { useEffect, useState } from \"react\";\nimport {\n  MDBTabsContent,\n} from 'mdb-react-ui-kit';\nimport Header from '../components/header';\nimport { useParams } from 'react-router-dom';\nimport DebtForm from \"../components/debt_form\";\nimport { useDispatch } from \"react-redux\";\nimport { setFormData } from \"../redux/reducers/debt_slice\";\nimport PaymentPlanList from \"../components/payment_plan_list\";\nimport { updatePaymentPlan } from \"../redux/reducers/payment_plan_slice\";\nimport { PaymentPlanData, PaymentPlan, FormData } from \"../utils/type\";\nimport { useSelector } from \"react-redux\";\nimportroo\n\n\nfunction AddPaymentPlanPage() {\n\n  const dispatch = useDispatch();\n  const { id } = useParams<{ id: string }>();\n  const paymentPlans = useSelector((state: RootState) => state.paymentPlan.paymentPlans);\n  const [error, setError] = useState<string>('');\n\n  const fetchData = async () => {\n    try {\n      const response = await axiosInstance.get(`/finance/debt/${id}`);\n      if (response.data.status === 'success') {\n        dispatch(setFormData(response.data.data));\n        setPaymentPlans(response.data.data.paymentPlan)\n      } else if (response.data.status === 'error') {\n        setError(response.data.data);\n      }\n    } catch (error) {\n      setError('An error occurred while retrieving data.');\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const handleSubmit = async (formData: FormData) => {\n\n    try {\n      const response = await axiosInstance.put(`/finance/debt/${id}`, formData);\n      if (response.data.status === 'success') {\n        const id = response.data.data.id\n        fetchData()\n      } else if (response.data.status === 'error') {\n        setError(response.data.data)\n      }\n    } catch (error) {\n      setError('An error occurred while submitting the form.');\n    }\n  };\n\n  const handleUpdate = async (planId: string, updatedData: Partial<PaymentPlanData>) => {\n    try {\n      const response = await axiosInstance.put(`/finance/payment-plans/${planId}`, updatedData);\n      if (response.data.status === 'success') {\n        dispatch(updatePaymentPlan(response.data));\n        fetchData();\n      } else if (response.data.status === 'error') {\n        setError(response.data.data)\n      }\n    } catch (error) {\n      setError('An error occurred during the update');\n    }\n  };\n\n\n  return (\n    <div className=\"bg-light pages\">\n      <Header />\n      <div className='px-2 py-4 pagesTitle'>Edit Payment Plan </div>\n      {error && <div className='error-message'>{error}</div>}\n      <div className=\"containerForm\">\n        <DebtForm onSubmit={handleSubmit} error={error} buttonText=\"Update Payment Plan\" />\n        <MDBTabsContent>\n\n          <MDBTabsContent className='p-5'>\n            {paymentPlans.map((plan, index) => (\n              <PaymentPlanList index={index} key={plan.id} plan={plan} onUpdate={(updatedData) => handleUpdate(plan.id, updatedData)} />\n            ))}\n          </MDBTabsContent>\n        </MDBTabsContent>\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default AddPaymentPlanPage;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}