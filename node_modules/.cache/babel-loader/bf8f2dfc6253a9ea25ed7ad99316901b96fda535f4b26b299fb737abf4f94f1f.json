{"ast":null,"code":"var _jsxFileName = \"/Users/semanurarslan/Desktop/frontend-developer-finance/src/components/register.tsx\",\n  _s = $RefreshSig$();\nimport { MDBTabsContent, MDBBtn, MDBInput, MDBValidation, MDBValidationItem } from 'mdb-react-ui-kit';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setToken } from '../redux/reducers/auth_slice';\nimport { loginState } from '../redux/reducers/login_slice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const dispatch = useDispatch();\n  const [error, setError] = useState('');\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n    passwordAgain: ''\n  });\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!(formData.password === formData.passwordAgain)) {\n      setError('Passwords do not match !');\n      setFormData(prevState => ({\n        ...prevState,\n        password: '',\n        passwordAgain: ''\n      }));\n      return;\n    }\n    const {\n      passwordAgain,\n      ...submitData\n    } = formData;\n    try {\n      const response = await axios.post('https://study.logiper.com/auth/register', submitData);\n      if (response.data.status === 'success') {\n        const token = response.data.data;\n        dispatch(setToken(token));\n        dispatch(loginState(true));\n      } else if (response.data.status === 'error') {\n        setError(response.data.data);\n      }\n    } catch (error) {\n      setError('An unknown error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(MDBTabsContent, {\n      children: /*#__PURE__*/_jsxDEV(MDBValidation, {\n        onSubmit: handleSubmit,\n        className: \"px-4\",\n        children: [/*#__PURE__*/_jsxDEV(MDBValidationItem, {\n          feedback: \"Please enter name surname\",\n          invalid: true,\n          className: \"form-item\",\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            required: true,\n            label: \"Name Surname\",\n            name: \"name\",\n            type: \"text\",\n            value: formData.name,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBValidationItem, {\n          feedback: \"Please enter email\",\n          invalid: true,\n          className: \"form-item\",\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            required: true,\n            label: \"Email\",\n            name: \"email\",\n            type: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBValidationItem, {\n          feedback: \"Please enter  password\",\n          invalid: true,\n          className: \"form-item\",\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            required: true,\n            label: \"Password\",\n            name: \"password\",\n            type: \"password\",\n            value: formData.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBValidationItem, {\n          feedback: \"Please re-enter the password\",\n          invalid: true,\n          className: \"form-item\",\n          children: /*#__PURE__*/_jsxDEV(MDBInput, {\n            wrapperClass: \"mb-4\",\n            required: true,\n            label: \"Password Again\",\n            name: \"passwordAgain\",\n            value: formData.passwordAgain,\n            onChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          type: \"submit\",\n          className: \"mb-4 w-100\",\n          children: \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(Register, \"687DQNdwyFOLqO6szsENZnu6lIk=\", false, function () {\n  return [useDispatch];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["MDBTabsContent","MDBBtn","MDBInput","MDBValidation","MDBValidationItem","axios","useState","useDispatch","setToken","loginState","jsxDEV","_jsxDEV","Fragment","_Fragment","Register","_s","dispatch","error","setError","formData","setFormData","name","email","password","passwordAgain","handleChange","e","value","target","prevState","handleSubmit","preventDefault","submitData","response","post","data","status","token","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","feedback","invalid","wrapperClass","required","label","type","onChange","_c","$RefreshReg$"],"sources":["/Users/semanurarslan/Desktop/frontend-developer-finance/src/components/register.tsx"],"sourcesContent":["import {\n    MDBTabsContent,\n    MDBBtn,\n    MDBInput,\n    MDBValidation,\n    MDBValidationItem,\n}\n    from 'mdb-react-ui-kit';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../redux/store';\nimport { setToken } from '../redux/reducers/auth_slice';\nimport { loginState } from '../redux/reducers/login_slice';\nimport { RegisterFormData } from '../utils/type';\n\nfunction Register() {\n\n    const dispatch = useDispatch<AppDispatch>();\n\n    const [error, setError] = useState('')\n    const [formData, setFormData] = useState<RegisterFormData>({\n        name: '',\n        email: '',\n        password: '',\n        passwordAgain: '',\n    })\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setFormData(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault()\n        setError('');\n        if (!(formData.password === formData.passwordAgain)) {\n            setError('Passwords do not match !');\n            setFormData(prevState => ({\n                ...prevState,\n                password: '',\n                passwordAgain: ''\n            }));\n            return;\n        }\n\n        const { passwordAgain, ...submitData } = formData;\n\n        try {\n\n            const response = await axios.post('https://study.logiper.com/auth/register', submitData);\n            if (response.data.status === 'success') {\n                const token = response.data.data;\n                dispatch(setToken(token));\n                dispatch(loginState(true));\n            } else if (response.data.status === 'error') {\n                setError(response.data.data)\n            }\n\n        } catch (error: any) {\n                setError('An unknown error occurred');\n            }\n\n\n\n    };\n\n    return (\n\n        <>\n            {error && <div className='error-message'>{error}</div>}\n            <MDBTabsContent >\n                <MDBValidation onSubmit={handleSubmit} className='px-4'>\n                    <MDBValidationItem feedback='Please enter name surname' invalid className='form-item'>\n                        <MDBInput wrapperClass='mb-4' required label='Name Surname' name='name' type='text' value={formData.name} onChange={handleChange} />\n                    </MDBValidationItem>\n                    <MDBValidationItem feedback='Please enter email' invalid className='form-item'>\n                        <MDBInput wrapperClass='mb-4' required label='Email' name='email' type='email' value={formData.email} onChange={handleChange} />\n                    </MDBValidationItem>\n                    <MDBValidationItem feedback='Please enter  password' invalid className='form-item'>\n                        <MDBInput wrapperClass='mb-4' required label='Password' name='password' type='password' value={formData.password} onChange={handleChange} />\n                    </MDBValidationItem >\n                    <MDBValidationItem feedback='Please re-enter the password' invalid className='form-item'>\n                        <MDBInput wrapperClass='mb-4' required label='Password Again' name='passwordAgain' value={formData.passwordAgain} onChange={handleChange} type='password' />\n                    </MDBValidationItem>\n                    <MDBBtn type=\"submit\" className=\"mb-4 w-100\">Sign up</MDBBtn>\n                </MDBValidation>\n            </MDBTabsContent>\n        </>\n\n    );\n}\n\nexport default Register;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}