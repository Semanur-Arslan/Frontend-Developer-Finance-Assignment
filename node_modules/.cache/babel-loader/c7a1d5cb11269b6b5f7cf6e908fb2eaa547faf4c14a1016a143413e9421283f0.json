{"ast":null,"code":"var _jsxFileName = \"/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/payment_plan.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axiosInstance from \"../utils/axios\";\nimport { MDBTabsContent, MDBRow, MDBListGroup, MDBListGroupItem, MDBCheckbox } from 'mdb-react-ui-kit';\nimport Header from '../components/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PaymentPlanPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [paymentPlans, setPaymentPlans] = useState([]);\n  const fetchPaymentPlans = async () => {\n    try {\n      const response = await axiosInstance.get(`/finance/payment-plans/${id}`);\n      if (response.data.status === 'success') {\n        setPaymentPlans(response.data.data);\n      } else {\n        setError('Veriler alınırken bir hata oluştu.');\n      }\n    } catch (error) {\n      setError('Veriler alınırken bir hata oluştu.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchPaymentPlans();\n  }, [id]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n  const handleUpdate = async plan => {\n    const updatedData = {\n      \"paymentDate\": plan.paymentDate,\n      \"paymentAmount\": plan.paymentAmount,\n      \"isPaid\": !plan.isPaid\n    };\n    try {\n      await axiosInstance.put(`/finance/payment-plans/${plan.id}`, updatedData);\n      window.confirm(`Changes saved successfully`);\n      fetchPaymentPlans();\n    } catch (error) {\n      setError('Borç silinirken bir hata oluştu.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-light pages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), paymentPlans.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No payment plans found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(MDBRow, {\n      children: /*#__PURE__*/_jsxDEV(MDBTabsContent, {\n        children: paymentPlans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border\",\n          children: /*#__PURE__*/_jsxDEV(MDBListGroup, {\n            style: {\n              minWidth: '22rem'\n            },\n            light: true,\n            onClick: () => {\n              handleUpdate(plan);\n            },\n            children: /*#__PURE__*/_jsxDEV(MDBListGroupItem, {\n              tag: \"label\",\n              children: [/*#__PURE__*/_jsxDEV(MDBCheckbox, {\n                label: `${index + 1}st Installment`,\n                checked: plan.isPaid\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Payment Amount: \", plan.paymentAmount, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\"Payment Date: \", new Date(plan.paymentDate).toISOString().split('T')[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)\n        }, plan.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(PaymentPlanPage, \"wd4KqlbuAdJt+xgd4Yrw7kPt9CI=\", false, function () {\n  return [useParams];\n});\n_c = PaymentPlanPage;\nexport default PaymentPlanPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPlanPage\");","map":{"version":3,"names":["useParams","useEffect","useState","axiosInstance","MDBTabsContent","MDBRow","MDBListGroup","MDBListGroupItem","MDBCheckbox","Header","jsxDEV","_jsxDEV","PaymentPlanPage","_s","id","error","setError","loading","setLoading","paymentPlans","setPaymentPlans","fetchPaymentPlans","response","get","data","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","handleUpdate","plan","updatedData","paymentDate","paymentAmount","isPaid","put","window","confirm","length","map","index","style","minWidth","light","onClick","tag","label","checked","Date","toISOString","split","_c","$RefreshReg$"],"sources":["/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/payment_plan.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axiosInstance from \"../utils/axios\";\nimport {\n    MDBTabsContent,\n    MDBBtn,\n    MDBInput,\n    MDBValidation,\n    MDBValidationItem,\n    MDBRow,\n    MDBCol,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBCheckbox\n\n} from 'mdb-react-ui-kit';\nimport Header from '../components/header';\n\ninterface PaymentPlanData {\n    id: string;\n    paymentAmount: number;\n    paymentDate: string;\n    isPaid: boolean;\n}\n\n\n\nfunction PaymentPlanPage() {\n    const { id } = useParams<{ id: string }>();\n    const [error, setError] = useState<string>('');\n    const [loading, setLoading] = useState<boolean>(true);\n    const [paymentPlans, setPaymentPlans] = useState<PaymentPlanData[]>([]);\n\n\n\n\n    const fetchPaymentPlans = async () => {\n        try {\n            const response = await axiosInstance.get<{ status: string; data: PaymentPlanData[] }>(`/finance/payment-plans/${id}`);\n            if (response.data.status === 'success') {\n                setPaymentPlans(response.data.data);\n            } else {\n                setError('Veriler alınırken bir hata oluştu.');\n            }\n        } catch (error) {\n            setError('Veriler alınırken bir hata oluştu.');\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        fetchPaymentPlans();\n    }, [id]);\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div className='error-message'>{error}</div>;\n    }\n\n\n    const handleUpdate = async (plan: PaymentPlanData) => {\n        const updatedData = {\n            \"paymentDate\": plan.paymentDate,\n            \"paymentAmount\": plan.paymentAmount,\n            \"isPaid\": !(plan.isPaid)\n        };\n\n        try {\n            await axiosInstance.put(`/finance/payment-plans/${plan.id}`, updatedData);\n            window.confirm(`Changes saved successfully`);\n            fetchPaymentPlans();\n        } catch (error) {\n            setError('Borç silinirken bir hata oluştu.');\n        }\n    };\n\n\n    return (\n        <div className=\"bg-light pages\">\n            <Header />\n            <div>Payment Plan</div>\n            {paymentPlans.length === 0 ? (\n                <div>No payment plans found.</div>\n            ) : (\n                <MDBRow>\n                <MDBTabsContent>\n                    {paymentPlans.map((plan: PaymentPlanData, index) => (\n                        <div key={plan.id} className='border'>\n                            <MDBListGroup style={{ minWidth: '22rem' }} light onClick={() => { handleUpdate(plan) }}>\n                                <MDBListGroupItem tag='label'>\n                                    <MDBCheckbox label={`${index + 1}st Installment`} checked={plan.isPaid} />\n                                    <div>\n                                        <p>Payment Amount: {plan.paymentAmount} </p>\n                                        <p>Payment Date: {new Date(plan.paymentDate).toISOString().split('T')[0]}</p>\n                                    </div>\n                                </MDBListGroupItem>\n                            </MDBListGroup>\n\n                        </div>\n                    ))}\n                </MDBTabsContent>\n                </MDBRow>\n            )}\n\n        </div>\n    );\n}\n\nexport default PaymentPlanPage;\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,aAAa,MAAM,gBAAgB;AAC1C,SACIC,cAAc,EAKdC,MAAM,EAENC,YAAY,EACZC,gBAAgB,EAChBC,WAAW,QAER,kBAAkB;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAW1C,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGd,SAAS,CAAiB,CAAC;EAC1C,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAS,EAAE,CAAC;EAC9C,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAU,IAAI,CAAC;EACrD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAoB,EAAE,CAAC;EAKvE,MAAMmB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMnB,aAAa,CAACoB,GAAG,CAA8C,0BAA0BT,EAAE,EAAE,CAAC;MACrH,IAAIQ,QAAQ,CAACE,IAAI,CAACC,MAAM,KAAK,SAAS,EAAE;QACpCL,eAAe,CAACE,QAAQ,CAACE,IAAI,CAACA,IAAI,CAAC;MACvC,CAAC,MAAM;QACHR,QAAQ,CAAC,oCAAoC,CAAC;MAClD;IACJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MACZC,QAAQ,CAAC,oCAAoC,CAAC;IAClD,CAAC,SAAS;MACNE,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACZoB,iBAAiB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACP,EAAE,CAAC,CAAC;EAER,IAAIG,OAAO,EAAE;IACT,oBAAON,OAAA;MAAAe,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAChC;EAEA,IAAIf,KAAK,EAAE;IACP,oBAAOJ,OAAA;MAAKoB,SAAS,EAAC,eAAe;MAAAL,QAAA,EAAEX;IAAK;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EACvD;EAGA,MAAME,YAAY,GAAG,MAAOC,IAAqB,IAAK;IAClD,MAAMC,WAAW,GAAG;MAChB,aAAa,EAAED,IAAI,CAACE,WAAW;MAC/B,eAAe,EAAEF,IAAI,CAACG,aAAa;MACnC,QAAQ,EAAE,CAAEH,IAAI,CAACI;IACrB,CAAC;IAED,IAAI;MACA,MAAMlC,aAAa,CAACmC,GAAG,CAAC,0BAA0BL,IAAI,CAACnB,EAAE,EAAE,EAAEoB,WAAW,CAAC;MACzEK,MAAM,CAACC,OAAO,CAAC,4BAA4B,CAAC;MAC5CnB,iBAAiB,CAAC,CAAC;IACvB,CAAC,CAAC,OAAON,KAAK,EAAE;MACZC,QAAQ,CAAC,kCAAkC,CAAC;IAChD;EACJ,CAAC;EAGD,oBACIL,OAAA;IAAKoB,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC3Bf,OAAA,CAACF,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVnB,OAAA;MAAAe,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACtBX,YAAY,CAACsB,MAAM,KAAK,CAAC,gBACtB9B,OAAA;MAAAe,QAAA,EAAK;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAElCnB,OAAA,CAACN,MAAM;MAAAqB,QAAA,eACPf,OAAA,CAACP,cAAc;QAAAsB,QAAA,EACVP,YAAY,CAACuB,GAAG,CAAC,CAACT,IAAqB,EAAEU,KAAK,kBAC3ChC,OAAA;UAAmBoB,SAAS,EAAC,QAAQ;UAAAL,QAAA,eACjCf,OAAA,CAACL,YAAY;YAACsC,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAQ,CAAE;YAACC,KAAK;YAACC,OAAO,EAAEA,CAAA,KAAM;cAAEf,YAAY,CAACC,IAAI,CAAC;YAAC,CAAE;YAAAP,QAAA,eACpFf,OAAA,CAACJ,gBAAgB;cAACyC,GAAG,EAAC,OAAO;cAAAtB,QAAA,gBACzBf,OAAA,CAACH,WAAW;gBAACyC,KAAK,EAAE,GAAGN,KAAK,GAAG,CAAC,gBAAiB;gBAACO,OAAO,EAAEjB,IAAI,CAACI;cAAO;gBAAAV,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC1EnB,OAAA;gBAAAe,QAAA,gBACIf,OAAA;kBAAAe,QAAA,GAAG,kBAAgB,EAACO,IAAI,CAACG,aAAa,EAAC,GAAC;gBAAA;kBAAAT,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAG,CAAC,eAC5CnB,OAAA;kBAAAe,QAAA,GAAG,gBAAc,EAAC,IAAIyB,IAAI,CAAClB,IAAI,CAACE,WAAW,CAAC,CAACiB,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;gBAAA;kBAAA1B,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAI,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5E,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT;QAAC,GATTG,IAAI,CAACnB,EAAE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWZ,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CACX;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEA,CAAC;AAEd;AAACjB,EAAA,CAnFQD,eAAe;EAAA,QACLZ,SAAS;AAAA;AAAAsD,EAAA,GADnB1C,eAAe;AAqFxB,eAAeA,eAAe;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}