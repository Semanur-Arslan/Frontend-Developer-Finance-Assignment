{"ast":null,"code":"var _jsxFileName = \"/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/payment_plan.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axiosInstance from \"../utils/axios\";\nimport { MDBTabsContent, MDBBtn, MDBListGroup, MDBListGroupItem, MDBCheckbox } from 'mdb-react-ui-kit';\nimport Header from '../components/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst handleUpdate = async (id, name) => {\n  try {\n    await axiosInstance.put(`/finance/debt/${id}`);\n    // Remove the deleted debt from the state\n    setDebtData(debtData.filter(debt => debt.id !== id));\n  } catch (error) {\n    setError('Borç silinirken bir hata oluştu.');\n  }\n};\nfunction PaymentPlanPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [paymentPlans, setPaymentPlans] = useState([]);\n  useEffect(() => {\n    const fetchPaymentPlans = async () => {\n      try {\n        const response = await axiosInstance.get(`/finance/payment-plans/${id}`);\n        if (response.data.status === 'success') {\n          setPaymentPlans(response.data.data);\n        } else {\n          setError('Veriler alınırken bir hata oluştu.');\n        }\n      } catch (error) {\n        setError('Veriler alınırken bir hata oluştu.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchPaymentPlans();\n  }, [id]); // Trigger fetch when debtId changes\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-light pages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), paymentPlans.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No payment plans found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(MDBTabsContent, {\n      children: paymentPlans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border\",\n        children: /*#__PURE__*/_jsxDEV(MDBListGroup, {\n          style: {\n            minWidth: '22rem'\n          },\n          light: true,\n          children: /*#__PURE__*/_jsxDEV(MDBListGroupItem, {\n            tag: \"label\",\n            children: [/*#__PURE__*/_jsxDEV(MDBCheckbox, {\n              label: `${index + 1}st Installment`,\n              checked: plan.isPaid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Payment Amount: \", plan.paymentAmount, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [\"Payment Date: \", new Date(plan.paymentDate).toISOString().split('T')[0]]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 29\n        }, this)\n      }, plan.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n      className: \"me-1\",\n      color: \"secondary\",\n      onClick: () => {\n        handleUpdate;\n      },\n      children: \"Save Changes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n_s(PaymentPlanPage, \"wd4KqlbuAdJt+xgd4Yrw7kPt9CI=\", false, function () {\n  return [useParams];\n});\n_c = PaymentPlanPage;\nexport default PaymentPlanPage;\nvar _c;\n$RefreshReg$(_c, \"PaymentPlanPage\");","map":{"version":3,"names":["useParams","useEffect","useState","axiosInstance","MDBTabsContent","MDBBtn","MDBListGroup","MDBListGroupItem","MDBCheckbox","Header","jsxDEV","_jsxDEV","handleUpdate","id","name","put","setDebtData","debtData","filter","debt","error","setError","PaymentPlanPage","_s","loading","setLoading","paymentPlans","setPaymentPlans","fetchPaymentPlans","response","get","data","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","plan","index","style","minWidth","light","tag","label","checked","isPaid","paymentAmount","Date","paymentDate","toISOString","split","color","onClick","_c","$RefreshReg$"],"sources":["/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/payment_plan.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axiosInstance from \"../utils/axios\";\nimport {\n    MDBTabsContent,\n    MDBBtn,\n    MDBInput,\n    MDBValidation,\n    MDBValidationItem,\n    MDBRow,\n    MDBCol,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBCheckbox\n\n} from 'mdb-react-ui-kit';\nimport Header from '../components/header';\n\ninterface PaymentPlanData {\n    id: string;\n    paymentAmount: number;\n    paymentDate: string;\n    isPaid: boolean;\n}\n\nconst handleUpdate = async (id: string, name:string) => {\n\n      try {\n        await axiosInstance.put(`/finance/debt/${id}`);\n        // Remove the deleted debt from the state\n        setDebtData(debtData.filter(debt => debt.id !== id));\n      } catch (error) {\n        setError('Borç silinirken bir hata oluştu.');\n      }\n\n  };\n\nfunction PaymentPlanPage() {\n    const { id } = useParams<{ id: string }>();\n    const [error, setError] = useState<string>('');\n    const [loading, setLoading] = useState<boolean>(true);\n    const [paymentPlans, setPaymentPlans] = useState<PaymentPlanData[]>([]);\n\n    useEffect(() => {\n        const fetchPaymentPlans = async () => {\n            try {\n                const response = await axiosInstance.get<{ status: string; data: PaymentPlanData[] }>(`/finance/payment-plans/${id}`);\n                if (response.data.status === 'success') {\n                    setPaymentPlans(response.data.data);\n                } else {\n                    setError('Veriler alınırken bir hata oluştu.');\n                }\n            } catch (error) {\n                setError('Veriler alınırken bir hata oluştu.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchPaymentPlans();\n    }, [id]); // Trigger fetch when debtId changes\n\n    if (loading) {\n        return <div>Loading...</div>;\n    }\n\n    if (error) {\n        return <div className='error-message'>{error}</div>;\n    }\n\n    return (\n        <div className=\"bg-light pages\">\n            <Header />\n            <div>Payment Plan</div>\n            {paymentPlans.length === 0 ? (\n                <div>No payment plans found.</div>\n            ) : (\n                <MDBTabsContent>\n                    {paymentPlans.map((plan: PaymentPlanData, index) => (\n                        <div key={plan.id} className='border'>\n                            <MDBListGroup style={{ minWidth: '22rem' }} light>\n                                <MDBListGroupItem tag='label'>\n                                    <MDBCheckbox label={`${index + 1}st Installment`}  checked={plan.isPaid} />\n                                    <div>\n                                    <p>Payment Amount: {plan.paymentAmount} </p>\n                                    <p>Payment Date: {new Date(plan.paymentDate).toISOString().split('T')[0]}</p>\n                                    </div>\n                                </MDBListGroupItem>\n                            </MDBListGroup>\n                        \n                        </div>\n                    ))}\n                </MDBTabsContent>\n            )}\n\n<MDBBtn className='me-1' color='secondary' onClick={() => {handleUpdate}}>\n       Save Changes\n\n      </MDBBtn>\n        </div>\n    );\n}\n\nexport default PaymentPlanPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}