{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport storage from 'redux-persist/lib/storage';\nimport loginReducer from './reducers/login_slice';\nimport auth_slice from './reducers/auth_slice';\nconst rootReducer = combineReducers({\n  login: loginReducer,\n  auth: auth_slice\n});\nconst persistConfig = {\n  key: 'root',\n  storage,\n  version: 1\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }),\n  reducer: applyMiddleware(thunk)\n});\nexport const persistor = persistStore(store);","map":{"version":3,"names":["combineReducers","configureStore","persistReducer","persistStore","thunk","storage","loginReducer","auth_slice","rootReducer","login","auth","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","applyMiddleware","persistor"],"sources":["/Users/semanurarslan/Desktop/frontend-developer-finance/src/redux/store.ts"],"sourcesContent":["\n\n\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistReducer, persistStore } from 'redux-persist';\nimport thunk from 'redux-thunk';\nimport storage from 'redux-persist/lib/storage';\nimport loginReducer from './reducers/login_slice';\nimport auth_slice from './reducers/auth_slice';\n\nconst rootReducer = combineReducers({ \n  login: loginReducer,\n  auth: auth_slice,\n});\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  version: 1,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: false,\n    }),\n    reducer: applyMiddleware(thunk)\n});\n\nexport const persistor = persistStore(store);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n"],"mappings":"AAGA,SAASA,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC5D,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,OAAOC,YAAY,MAAM,wBAAwB;AACjD,OAAOC,UAAU,MAAM,uBAAuB;AAE9C,MAAMC,WAAW,GAAGR,eAAe,CAAC;EAClCS,KAAK,EAAEH,YAAY;EACnBI,IAAI,EAAEH;AACR,CAAC,CAAC;AAEF,MAAMI,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXP,OAAO;EACPQ,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,gBAAgB,GAAGZ,cAAc,CAACS,aAAa,EAAEH,WAAW,CAAC;AAEnE,OAAO,MAAMO,KAAK,GAAGd,cAAc,CAAC;EAClCe,OAAO,EAAEF,gBAAgB;EACzBG,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;EACrB,CAAC,CAAC;EACFH,OAAO,EAAEI,eAAe,CAAChB,KAAK;AAClC,CAAC,CAAC;AAEF,OAAO,MAAMiB,SAAS,GAAGlB,YAAY,CAACY,KAAK,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}