{"ast":null,"code":"var _jsxFileName = \"/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/add_payment_plan.tsx\",\n  _s = $RefreshSig$();\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axiosInstance from \"../utils/axios\";\nimport { MDBTabsContent, MDBRow, MDBCol, MDBListGroup, MDBListGroupItem, MDBCheckbox } from 'mdb-react-ui-kit';\nimport Header from '../components/header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddPaymentPlanPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [error, setError] = useState('');\n  const [paymentPlans, setPaymentPlans] = useState([]);\n  const fetchPaymentPlans = async () => {\n    try {\n      const response = await axiosInstance.get(`/finance/payment-plans/${id}`);\n      if (response.data.status === 'success') {\n        setPaymentPlans(response.data.data);\n      } else {\n        setError('Veriler alınırken bir hata oluştu.');\n      }\n    } catch (error) {\n      setError('Veriler alınırken bir hata oluştu.');\n    }\n  };\n  useEffect(() => {\n    fetchPaymentPlans();\n  }, [id]);\n  const handleUpdate = async plan => {\n    const updatedData = {\n      \"paymentDate\": plan.paymentDate,\n      \"paymentAmount\": plan.paymentAmount,\n      \"isPaid\": !plan.isPaid\n    };\n    try {\n      await axiosInstance.put(`/finance/payment-plans/${plan.id}`, updatedData);\n      fetchPaymentPlans();\n    } catch (error) {\n      setError('Borç silinirken bir hata oluştu.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-light pages\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add Payment Plan \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(MDBTabsContent, {\n      className: \"p-5\",\n      children: paymentPlans.map((plan, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border\",\n        children: /*#__PURE__*/_jsxDEV(MDBListGroup, {\n          style: {\n            minWidth: '22rem'\n          },\n          light: true,\n          children: /*#__PURE__*/_jsxDEV(MDBListGroupItem, {\n            tag: \"label\",\n            children: /*#__PURE__*/_jsxDEV(MDBRow, {\n              children: [/*#__PURE__*/_jsxDEV(MDBCol, {\n                className: \"d-flex justify-content-center align-items-center\",\n                children: /*#__PURE__*/_jsxDEV(MDBCheckbox, {\n                  label: plan.isPaid == true ? 'Paid' : 'Not Paid',\n                  checked: plan.isPaid,\n                  onClick: () => {\n                    handleUpdate(plan);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(MDBCol, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-bg-warning p-1 text-light\",\n                  children: [index + 1, \"st Installment\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fw-bold\",\n                    children: \"Payment Amount:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 45\n                  }, this), \" \", plan.paymentAmount, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"fw-bold\",\n                    children: \" Payment Date:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 81,\n                    columnNumber: 45\n                  }, this), \"  \", new Date(plan.paymentDate).toISOString().split('T')[0]]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }, this)\n      }, plan.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(AddPaymentPlanPage, \"dYB797htO3DU4mXU0dwHVV5NCXs=\", false, function () {\n  return [useParams];\n});\n_c = AddPaymentPlanPage;\nexport default AddPaymentPlanPage;\nvar _c;\n$RefreshReg$(_c, \"AddPaymentPlanPage\");","map":{"version":3,"names":["useParams","useEffect","useState","axiosInstance","MDBTabsContent","MDBRow","MDBCol","MDBListGroup","MDBListGroupItem","MDBCheckbox","Header","jsxDEV","_jsxDEV","AddPaymentPlanPage","_s","id","error","setError","paymentPlans","setPaymentPlans","fetchPaymentPlans","response","get","data","status","handleUpdate","plan","updatedData","paymentDate","paymentAmount","isPaid","put","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","style","minWidth","light","tag","label","checked","onClick","Date","toISOString","split","_c","$RefreshReg$"],"sources":["/Users/semanurarslan/Desktop/frontend-developer-finance/src/pages/add_payment_plan.tsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport axiosInstance from \"../utils/axios\";\nimport {\n    MDBTabsContent,\n    MDBRow,\n    MDBCol,\n    MDBListGroup,\n    MDBListGroupItem,\n    MDBCheckbox\n\n} from 'mdb-react-ui-kit';\nimport Header from '../components/header';\n\ninterface PaymentPlanData {\n    id: string;\n    paymentAmount: number;\n    paymentDate: string;\n    isPaid: boolean;\n}\n\nfunction AddPaymentPlanPage() {\n    const { id } = useParams<{ id: string }>();\n    const [error, setError] = useState<string>('');\n    const [paymentPlans, setPaymentPlans] = useState<PaymentPlanData[]>([]);\n\n\n\n\n    const fetchPaymentPlans = async () => {\n        try {\n            const response = await axiosInstance.get<{ status: string; data: PaymentPlanData[] }>(`/finance/payment-plans/${id}`);\n            if (response.data.status === 'success') {\n                setPaymentPlans(response.data.data);\n            } else {\n                setError('Veriler alınırken bir hata oluştu.');\n            }\n        } catch (error) {\n            setError('Veriler alınırken bir hata oluştu.');\n        }\n    };\n\n    useEffect(() => {\n        fetchPaymentPlans();\n    }, [id]);\n\n\n    const handleUpdate = async (plan: PaymentPlanData) => {\n        const updatedData = {\n            \"paymentDate\": plan.paymentDate,\n            \"paymentAmount\": plan.paymentAmount,\n            \"isPaid\": !(plan.isPaid)\n        };\n\n        try {\n            await axiosInstance.put(`/finance/payment-plans/${plan.id}`, updatedData);\n            fetchPaymentPlans();\n        } catch (error) {\n            setError('Borç silinirken bir hata oluştu.');\n        }\n    };\n\n\n    return (\n        <div className=\"bg-light pages\">\n            <Header />\n            <div>Add Payment Plan </div>   \n            {error && <div className='error-message'>{error}</div>}           \n                <MDBTabsContent className='p-5'>\n                    {paymentPlans.map((plan: PaymentPlanData, index) => (\n                        <div key={plan.id} className='border'>\n                            <MDBListGroup style={{ minWidth: '22rem' }} light >\n                                <MDBListGroupItem tag='label'>\n                                <MDBRow >\n                                <MDBCol className=\"d-flex justify-content-center align-items-center\" >\n                                    <MDBCheckbox label={plan.isPaid == true ? 'Paid' : 'Not Paid'} checked={plan.isPaid} onClick={() => { handleUpdate(plan) }}/>\n                                </MDBCol>\n                                    <MDBCol>\n                                        <p className='text-bg-warning p-1 text-light'>{index + 1}st Installment</p>\n                                        <p> <span className=\"fw-bold\">Payment Amount:</span> {plan.paymentAmount} </p>\n                                        <p> <span className=\"fw-bold\"> Payment Date:</span>  {new Date(plan.paymentDate).toISOString().split('T')[0]}</p>\n                                        </MDBCol>\n                                        </MDBRow>\n                                </MDBListGroupItem>\n                            </MDBListGroup>\n\n                        </div>\n                    ))}\n                </MDBTabsContent>\n        </div>\n    );\n}\n\nexport default AddPaymentPlanPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}