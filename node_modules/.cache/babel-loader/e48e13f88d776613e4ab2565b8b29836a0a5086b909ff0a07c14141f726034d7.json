{"ast":null,"code":"var _jsxFileName = \"/Users/semanurarslan/Desktop/frontend-developer-finance/src/components/login.tsx\",\n  _s = $RefreshSig$();\nimport { MDBTabsContent, MDBBtn, MDBInput } from 'mdb-react-ui-kit';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setToken } from '../redux/reducers/auth_slice';\nimport { loginState } from '../redux/reducers/login_slice';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onRegisterClick\n}) {\n  _s();\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('https://study.logiper.com/auth/login', formData);\n      if (response.data.status === 'success') {\n        const token = response.data.data;\n        dispatch(setToken(token));\n        dispatch(loginState(true));\n      } else if (response.data.status === 'error') {\n        setError(response.data.data);\n      }\n    } catch (error) {\n      if (axios.isAxiosError(error) && error.response) {\n        setError(error.response.data.data);\n      } else {\n        setError('An unknown error occurred');\n      }\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(MDBTabsContent, {\n      children: /*#__PURE__*/_jsxDEV(MDBValidation, {\n        onSubmit: handleSubmit,\n        className: \"px-4\",\n        children: [/*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          label: \"Email address\",\n          id: \"form1\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBInput, {\n          wrapperClass: \"mb-4\",\n          label: \"Password\",\n          id: \"form2\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MDBBtn, {\n          className: \"mb-4 w-100\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center\",\n          children: [\"Not a member? \", /*#__PURE__*/_jsxDEV(\"a\", {\n            onClick: onRegisterClick,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"bSUMs5N0kXty9VG8UtyonN+kF14=\", false, function () {\n  return [useDispatch];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["MDBTabsContent","MDBBtn","MDBInput","axios","useState","useDispatch","setToken","loginState","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","onRegisterClick","_s","dispatch","formData","setFormData","email","password","error","setError","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","response","post","data","status","token","isAxiosError","console","children","className","fileName","_jsxFileName","lineNumber","columnNumber","MDBValidation","onSubmit","wrapperClass","label","id","type","onClick","_c","$RefreshReg$"],"sources":["/Users/semanurarslan/Desktop/frontend-developer-finance/src/components/login.tsx"],"sourcesContent":["import {\n    MDBTabsContent,\n    MDBBtn,\n    MDBInput\n}\n    from 'mdb-react-ui-kit';\nimport axios from 'axios';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../redux/store';\nimport { setToken } from '../redux/reducers/auth_slice';\nimport { loginState } from '../redux/reducers/login_slice';\n\n\n\n    interface LoginProps {\n        onRegisterClick: (event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) => void;\n    }\n    \n    function Login({ onRegisterClick }: LoginProps) {\n\n\n        const dispatch = useDispatch<AppDispatch>();\n\n        interface FormData {\n            email: string;\n            password: string;\n        }\n    \n        const [formData, setFormData] = useState<FormData>({\n            email: '',\n            password: '',\n        })\n        const [error, setError] = useState('')\n    \n    \n    \n        const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n            const { name, value } = e.target;\n            setFormData(prevState => ({\n                ...prevState,\n                [name]: value\n            }));\n        };\n    \n        const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n            e.preventDefault()\n    \n    \n            try {\n    \n                const response = await axios.post('https://study.logiper.com/auth/login', formData);\n                if (response.data.status === 'success') {\n                    const token = response.data.data;\n                    dispatch(setToken(token));\n                    dispatch(loginState(true));\n    \n    \n                } else if (response.data.status === 'error') {\n                    setError(response.data.data)\n                }\n    \n    \n            } catch (error: any) {\n                if (axios.isAxiosError(error) && error.response) {\n                    setError(error.response.data.data);\n                } else {\n                    setError('An unknown error occurred');\n                }\n                console.error('Error:', error);\n            }\n    \n    \n    \n        };\n\n\n       \n    return (\n\n<>\n            {error && <div className='error-message'>{error}</div>}\n        <MDBTabsContent >\n        <MDBValidation onSubmit={handleSubmit} className='px-4'>\n            <MDBInput wrapperClass='mb-4' label='Email address' id='form1' type='email' />\n            <MDBInput wrapperClass='mb-4' label='Password' id='form2' type='password' />\n\n\n            <MDBBtn className=\"mb-4 w-100\">Sign in</MDBBtn>\n            <p className=\"text-center\">Not a member? <a onClick={onRegisterClick}>Register</a></p>\n            </MDBValidation>\n        </MDBTabsContent>\n        </>\n    );\n}\n\nexport default Login;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}